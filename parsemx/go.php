<?php
//$GLOBALS [ '_1333821052_' ]  = Array();

//function FUNC_1($i)
//{
// $a  =  Array (
// '_1028027143_', 'c', 'hdir', 'dirname',
//  'hea', 'der',
//  'def', 'i', 'ne',
//  'fi', 'le_', 'exists',
//  'file', 'mtime',
// 't', 'ime', '',
//        'u', 'nl', 'ink', '', 
//      'fi', 'le_', 'put_conten', 't', 's',
//    's', 'trpos',
//  'file_ex', 'i', 's', 'ts',
//'file_exists',
//        'f', 'ilemti', 'me', 
//      'filemti', 'm', 'e', '',
//    'file',
//  'f', 'open',
//'fwr', 'ite', '',
//        'fw', 'rite', 
//      'd', 'ate',
//    'fwr', 'i', 'te',
//  'fwrite',
//'fclose',
//'micr', 'oti', 'm', 'e',
//  'de', 'fine', 'd', '',
//  'd', 'efine',
//  'i', 'ni_ge', 't',
//  'ini_get',
//  'se', 't_', 't', 'ime_limit',
//  'str_', 'repla', 'ce',
//  'str_re', 'p', 'l', 'ace',
//  'ini_set',
//  'ini_get',
// 'i', 'ni_ge', 't',
// 'se', 't_tim', 'e_l', 'imit', '',
//'file_', 'get_c', 'on', 't', 'ent', 's',
//'ini_get',
//'u', 'nli', 'nk',
// 'd', 'e', 'fin', 'ed',
//'defi', 'ne',
// 'ini_s', 'et', '',
// 'i', 'n', 'i_', 'set', '',
// 'err', 'or', '_rep', 'orting',
// 'date',
// 'da', 'te', '',
// 'e', 'xplod', 'e',
// 's', 'trpos', '',
// 'unl', 'ink',
// 'f', 'ile_put', '_content', 's',
//  'microti', 'me',
//  'un', 'lin', 'k', '',
//  'sleep',
//'ex', 'tr', 'act',
// 'e', 'xplode',
// 'strpo', 's', '',
// 'strpos',
/// 'fi', 'l', 'e_ex', 'is', 'ts', '',
// 'microt', 'im', 'e', '',
// 'unli', 'nk',
//'locker.tmp',
//'SERVER_NAME',
//'Content-Type: text/html; charset = utf-8',
//'dev',
//'DEV',
// 'url',
//'nolock',
// "ParseMX script already working. Exiting", "",
/// 'parsemx.php',
// 'platform.php',
/// 'ins_id',
//'script',
// '.txt',
// '.php',
// 'w',
// "<?php \n",
// '// *** ParseMX autogenerated script. Do not edit. Generated at ',
// "F j,  Y,  g:i a",
// "\n",
// '// *** SITE: ',
// "\n",
//   "\n",
//   'test',
//   "<br />",
///    'url',
//    'WARNING! Someone tried to access ParseMX Admin without sufficient rights',
//   "ACCESS DENIED. Log in your system as Admin",
//   'DEV',
///   'DEV',
//   'max_execution_time',
//  'safe_mode',
//   'url',
//   '/',
//   'url',
//   'url',
//   '_dxd_',
//   ':',
//   'url',
//   'NOTICE: Using Test URL - ',
//   'url',
//  'SELECT donor_id FROM parsemx_ins WHERE ins_id = ',
//   'ins_id',
// 'donor_id',
//  "DELETE FROM parsemx_links WHERE url = \"",
//  'url',
//   "\" and ins_id = ",
//   'ins_id',
//  'product',
//  'ins_id',
//  'url',
//   'log_errors',
//    'On',
//   'max_execution_time',
//   'safe_mode', '', '',
//   'max_execution_time',
//  "NOTICE: *** License server is down. Exiting ***",
//  'DEV', 'DEV',
//  'display_errors',
//   'On',
//  'display_startup_errors',
//  '*** ParseMX demon started',
//  'i', 'H', ' ',
//  'host',
//  'NOTICE: Starting sheduled scan of <b>',
//  'host',
//  '</b>',
//  'donor_id',
//  'cron_status.tmp',
//  'noidle',
//   'url',
//   "",
//   "SELECT * FROM parsemx_tasks ORDER BY z_order DESC LIMIT 1",
//   "SELECT donor_id FROM parsemx_donors WHERE state>0",
// 'donor_id',
//  'noidle', 'noidle',
// 'No tasks,  demon stopped.',
//  "UPDATE parsemx_tasks SET z_order = ",
//  "task", "",
//  "task2", "",
//  "task3", "",
//  'state', ' ',
//  "//", "",
//  'host',
//  "//",
//  '_',
//  '.php',
//  'scripter.php',
//   'title',
//   '_',
//   "<br />",
//  'WARNING! No ',
//  ' script for ',
//  ' - ',
//   'DELETE FROM parsemx_tasks WHERE task_id = ',
//   'active_tasks',
//   'done_tasks',
//   'active_tasks',
//   'donor_id',
//   "<a name = 'result'></a>",
//   "NOTICE: Test OK! Result - <a href = '",
//   "'>",
//    "</a>",
//  "WARNING: No products created!",
//  '*** ParseMX demon stopped. Working time: ',
//  ' secs taken',
//   'auto',
//   "<script type = 'text/javascript'>
//   window.onload  =  function () {location = 'go.php?auto = 1';}</script>",
//
//   '_1028027143_',
//	'_1028027143_',
//	'_1028027143_',
//	'_1028027143_', '_1028027143_',
//	'_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_', '_1028027143_'
// );
//  return $a [ $i ] ;
//}

//$GLOBALS [ FUNC_1(0) ]   =  Array (
//  FUNC_1(1) . FUNC_1(2),  //chdir
// FUNC_1(3), //dirname
//  FUNC_1(4) . FUNC_1(5),  //header
//  FUNC_1(6) . FUNC_1(7) . FUNC_1(8),  //define
//  FUNC_1(9) . FUNC_1(10) . FUNC_1(11), //file_exists
//  FUNC_1(12) . FUNC_1(13), //filemtime
//  FUNC_1(14) . FUNC_1(15), //time
//  FUNC_1(16) . FUNC_1(17) . FUNC_1(18) . FUNC_1(19), //unlink
//  FUNC_1(20) . FUNC_1(21) . FUNC_1(22) . FUNC_1(23) . FUNC_1(24) . FUNC_1(25), //file_put_contents
//  FUNC_1(26) . FUNC_1(27), //strpos
// FUNC_1(28) . FUNC_1(29) . FUNC_1(30) . FUNC_1(31), //file_exists
// FUNC_1(32), //file_exists
//  FUNC_1(33) . FUNC_1(34) . FUNC_1(35), //filemtime
//  FUNC_1(36) . FUNC_1(37) . FUNC_1(38), //filemtime
//  FUNC_1(39) . FUNC_1(40), //file
//  FUNC_1(41) . FUNC_1(42), //fopen
//  FUNC_1(43) . FUNC_1(44), //fwrite
//  FUNC_1(45) . FUNC_1(46) . FUNC_1(47), //fwrite
// FUNC_1(48) . FUNC_1(49), //date
//FUNC_1(50) . FUNC_1(51) . FUNC_1(52), //fwrite
// FUNC_1(53), //fwrite
// FUNC_1(54), //fclose
//  FUNC_1(55) . FUNC_1(56) . FUNC_1(57) . FUNC_1(58), //microtime
// FUNC_1(59) . FUNC_1(60) . FUNC_1(61), //defined
// FUNC_1(62) . FUNC_1(63) . FUNC_1(64), //define
// FUNC_1(65) . FUNC_1(66) . FUNC_1(67), //ini_get
//  FUNC_1(68), //ini_get
//  FUNC_1(69) . FUNC_1(70) . FUNC_1(71) . FUNC_1(72), //set_time_limit
//  FUNC_1(73) . FUNC_1(74) . FUNC_1(75), //str_replace
//  FUNC_1(76) . FUNC_1(77) . FUNC_1(78) . FUNC_1(79), //str_replace
// FUNC_1(80), //ini_set
// FUNC_1(81), //ini_get
// FUNC_1(82) . FUNC_1(83) . FUNC_1(84), //ini_get
// FUNC_1(85) . FUNC_1(86) . FUNC_1(87) . FUNC_1(88), //set_time_limit
// FUNC_1(89) . FUNC_1(90) . FUNC_1(91) . FUNC_1(92) . FUNC_1(93) . FUNC_1(94) . FUNC_1(95), //file_get_contents
// FUNC_1(96), //ini_get
// FUNC_1(97) . FUNC_1(98) . FUNC_1(99), //unlink
// FUNC_1(100) . FUNC_1(101) . FUNC_1(102) . FUNC_1(103), //defined
//FUNC_1(104) . FUNC_1(105), //define
// FUNC_1(106) . FUNC_1(107), //ini_set
// FUNC_1(108) . FUNC_1(109) . FUNC_1(110) . FUNC_1(111) . FUNC_1(112), //ini_set
// FUNC_1(113) . FUNC_1(114) . FUNC_1(115) . FUNC_1(116) . FUNC_1(117), //error_reporting
// FUNC_1(118), //date
// FUNC_1(119) . FUNC_1(120),  //date
// FUNC_1(121) . FUNC_1(122) . FUNC_1(123) . FUNC_1(124), //explode
// FUNC_1(125) . FUNC_1(126), //strpos
// FUNC_1(127) . FUNC_1(128) . FUNC_1(129), //unlink
//  FUNC_1(130) . FUNC_1(131) . FUNC_1(132) . FUNC_1(133), //file_put_contents
// FUNC_1(134) . FUNC_1(135), //microtime
//FUNC_1(136) . FUNC_1(137) . FUNC_1(138), //unlink
//FUNC_1(139) . FUNC_1(140), //sleep
//FUNC_1(141) . FUNC_1(142) . FUNC_1(143), //extract
//FUNC_1(144) . FUNC_1(145), //explode
//FUNC_1(146) . FUNC_1(147), //strpos
//FUNC_1(148) . FUNC_1(149), //strpos
//FUNC_1(150) . FUNC_1(151) . FUNC_1(152) . FUNC_1(153) . FUNC_1(154), //file_exists
//FUNC_1(155) . FUNC_1(156) . FUNC_1(157) . FUNC_1(158), //microtime
//FUNC_1(159) . FUNC_1(160) . FUNC_1(161) //unlink
//);

//function FUNC_2($VAR_1){
//$VAR_2 = Array(
//FUNC_1(162), //locker.tmp
//FUNC_1(163), //SERVER_NAME
//FUNC_1(164), //Content-Type: text/html; charset = utf-8
//FUNC_1(165), //dev
//FUNC_1(166), //DEV
//FUNC_1(167), //url
//FUNC_1(168), //nolock
//FUNC_1(169), //ParseMX script already working. Exiting
//FUNC_1(170), //
//FUNC_1(171), //parsemx.php
//FUNC_1(172), //platform.php
//FUNC_1(173), //ins_id
//FUNC_1(174), //script
//FUNC_1(175), //.txt
//FUNC_1(176), //.php
//FUNC_1(177), //w
//FUNC_1(178), //<?php
//FUNC_1(179), //// *** ParseMX autogenerated script. Do not edit. Generated at
//FUNC_1(180), //F j, Y, g:i a
//FUNC_1(181), //
//FUNC_1(182), //// *** SITE:
//FUNC_1(183), //
//FUNC_1(184), //
//FUNC_1(185), //test
//FUNC_1(186), //<br />
//FUNC_1(187), //url
//FUNC_1(188), //WARNING! Someone tried to access ParseMX Admin without sufficient rights
//FUNC_1(189), //ACCESS DENIED. Log in your system as Admin
//FUNC_1(190), //DEV
//FUNC_1(191), //DEV
//FUNC_1(192), //max_execution_time
//FUNC_1(193), //safe_mode
//FUNC_1(194), //url
//FUNC_1(195), //_sxs_
//FUNC_1(196), ///
//FUNC_1(197), //url
//FUNC_1(198), //url
//FUNC_1(199), //_dxd_
//FUNC_1(200), //:
//FUNC_1(201), //url
//FUNC_1(202), //NOTICE: Using Test URL -
//FUNC_1(203), //url
//FUNC_1(204), //SELECT donor_id FROM parsemx_ins WHERE ins_id =
//FUNC_1(205), //ins_id
//FUNC_1(206), //donor_id
//FUNC_1(207), //DELETE FROM parsemx_links WHERE url = "
//FUNC_1(208), //url
//FUNC_1(209), //" and ins_id =
//FUNC_1(210), //ins_id
//FUNC_1(211), //product
//FUNC_1(212), //ins_id
//FUNC_1(213), //url
//FUNC_1(214), //log_errors
//FUNC_1(215), //On
//FUNC_1(216), //max_execution_time
//FUNC_1(217), //safe_mode
//FUNC_1(218), //
//FUNC_1(219), //
//FUNC_1(220), //max_execution_time
//FUNC_1(221), //NOTICE: *** License server is down. Exiting ***
//FUNC_1(222), //DEV
//FUNC_1(223), //DEV
//FUNC_1(224), //display_errors
//FUNC_1(225), //On
//FUNC_1(226), //display_startup_errors
//FUNC_1(227), //*** ParseMX demon started
//FUNC_1(228), //i
//FUNC_1(229), //H
//FUNC_1(230), //
//FUNC_1(231), //host
//FUNC_1(232), //NOTICE: Starting sheduled scan of <b>
//FUNC_1(233), //host
//FUNC_1(234), //</b>
//FUNC_1(235), //donor_id
//FUNC_1(236), //cron_status.tmp
//FUNC_1(237), //noidle
//FUNC_1(238), //url
//FUNC_1(239), //
//FUNC_1(240), //SELECT * FROM parsemx_tasks ORDER BY z_order DESC LIMIT 1
//FUNC_1(241), //SELECT donor_id FROM parsemx_donors WHERE state>0
//FUNC_1(242), //donor_id
//FUNC_1(243), //noidle
//FUNC_1(244), //noidle
//FUNC_1(245), //No tasks, demon stopped.
//FUNC_1(246), //UPDATE parsemx_tasks SET z_order =
//FUNC_1(247), //task
//FUNC_1(248), //
//FUNC_1(249), //task2
//FUNC_1(250), //
//FUNC_1(251), //task3
//FUNC_1(252), //
//FUNC_1(253), //state
//FUNC_1(254), //
//FUNC_1(255), ////
//FUNC_1(256), //
//FUNC_1(257), //host
//FUNC_1(258), ////
//FUNC_1(259), //_
//FUNC_1(260), //.php
//FUNC_1(261), //scripter.php
//FUNC_1(262), //title
//FUNC_1(263), //_
//FUNC_1(264), //<br />
//FUNC_1(265), //WARNING! No
//FUNC_1(266), // script for
//FUNC_1(267), // -
//FUNC_1(268), //DELETE FROM parsemx_tasks WHERE task_id =
//FUNC_1(269), //active_tasks
//FUNC_1(270), //done_tasks
//FUNC_1(271), //active_tasks
//FUNC_1(272), //donor_id
//FUNC_1(273), //<a name = 'result'></a>
//FUNC_1(274), //NOTICE: Test OK! Result - <a href = '
//FUNC_1(275), //'>
//FUNC_1(276), //</a>
//FUNC_1(277), //WARNING: No products created!
//FUNC_1(278), //*** ParseMX demon stopped. Working time:
//FUNC_1(279), // secs taken
//FUNC_1(280), //auto
//FUNC_1(281), //<script type = 'text/javascript'> window.onload = function () {location = 'go.php?auto = 1';}</script>
//);
//return $VAR_2 [ $VAR_1 ] ;
//}

chdir(dirname(__FILE__));
$locker = 'locker.tmp';

if (@$_SERVER ['SERVER_NAME'])
    header('Content-Type: text/html; charset = utf-8');
if (@$_GET ['dev'])
    define('DEV', true);
$VAR_3 = 4.5;

if (empty($max_time))
    $max_time = (int)($VAR_3 * 60);

if (@!$_GET ['url'] and @!$_GET ['nolock']) {
    if (file_exists($locker) and (filemtime($locker) > time() - $max_time)) {
        echo "ParseMX script already working. Exiting";
        exit;
    }
    @unlink($locker);
    file_put_contents($locker, "");
    $nosession = true;
}

require_once('parsemx.php');
require_once('platform.php');

function add_tasks($type, $links, $z_order = 0)
{
    global $ins;
    $result = array();
    if (count($links) === 0) {
        xlog('No links to adds.');
        return;
    }
    $links = urls($links);
    foreach ($links as $link) {
        $result[] = $link;
    }

    AddTasks($type, $ins['ins_id'], $result, $z_order);
}

function PrepareScript($script = '')
{
    if (!$script) {
        $script = g('script');
    }

    $VAR_13 = $script . '.txt';
    $VAR_14 = $script . '.php';

    if (file_exists($VAR_13)) {
        if (
            !file_exists($VAR_14)or(filemtime($VAR_13) > filemtime($VAR_14))
        ) {
            $VAR_15 = file($VAR_13, FILE_IGNORE_NEW_LINES and FILE_SKIP_EMPTY_LINES);
            $VAR_16 = fopen($VAR_14, 'w');
            fwrite($VAR_16, "<?php \n");
            fwrite($VAR_16, '// *** ParseMX autogenerated script. Do not edit. Generated at ' . date("F j,  Y,  g:i a") . "/n");

            foreach ($VAR_15 as $VAR_17) {
                fwrite($VAR_16, MxBasic($VAR_17) . "/n");
            }

            fclose($VAR_16);
        }

        if (g('test')) {
            echo "<br />";
            xlog("Script <b>$VAR_14</b> start:");
        }

        return $VAR_14;
    }
}

$VAR_18 = microtime(true);
$test = false;

if (@$_GET['url']) {
    if (!HaveAdminAccess()) {
        xlog('WARNING! Someone tried to access ParseMX Admin without sufficient rights');
        die("ACCESS DENIED. Log in your system as Admin");
    }

    if (!defined('DEV')) {
        define('DEV', true);
    }

    if (ini_get('max_execution_time') < 120) {
        if (!ini_get('safe_mode')) {
            set_time_limit(120);
        }
    }
            
    $_GET ['url'] = str_replace('_sxs_', '/', $_GET ['url']);
    $_GET ['url'] = str_replace('_dxd_', ':', $_GET ['url']);
    
    xlog('NOTICE: Using Test URL -' . $_GET ['url']);
    
    $donor_id = query('SELECT donor_id FROM parsemx_ins WHERE ins_id =' . $_GET['ins_id'])->row['donor_id'];
    
    LoadDonorMeters($donor_id);
    query("DELETE FROM parsemx_links WHERE url = \"" . $_GET ['url'] . "\" and ins_id = " . $_GET ['ins_id']);
    AddTasks('product', $_GET ['ins_id'], array($_GET ['url']), 1000);
    SaveDonorMeters();
    
    $test = true;
} else {
    ini_set('log_errors', 'On');
    if (ini_get('max_execution_time') < $max_time + 30) {
        if (!ini_get('safe_mode')) {
            set_time_limit($max_time + 30);
        }
    }
}

if (!defined('DEV'))
    define('DEV', false);

if (DEV) {
    ini_set('display_errors', 'On');
    ini_set('display_startup_errors', TRUE);
    error_reporting(-1 ^ E_STRICT);
}

xlog('*** ParseMX demon started');

if (date('i') < 15) {
    $VAR_21 = date('H');

    if (!(int)$VAR_21)
        $VAR_21 = 24;

    $VAR_6 = query("SELECT * FROM parsemx_donors WHERE autorun = $VAR_21 AND state<>2")->rows;
    foreach ($VAR_6 as $VAR_12) {
        $VAR_22 = false;
        foreach (explode('', $VAR_19) as $VAR_23)
            if (strpos($VAR_12 ['host'], $VAR_23) !== false) {
                $VAR_22 = true;
            }
        if ($VAR_22) {
            xlog('NOTICE: Starting sheduled scan of <b>' . $VAR_12 ['host'] . '</b>');
            DonorStart(0, $VAR_12 ['donor_id']);
        }
    }
}

$VAR_24 = 'cron_status.tmp';

if (!(@$_GET ['noidle'] || @$_GET ['url'])) {
    @unlink($VAR_24);
    file_put_contents($VAR_24, "");
}

while (microtime(true) - $VAR_18 < $max_time) {
    $VAR_9 = query("SELECT * FROM parsemx_tasks ORDER BY z_order DESC LIMIT 1")->row;
    if (!$VAR_9) {
        $VAR_25 = query("SELECT donor_id FROM parsemx_donors WHERE state>0")->rows;
        if ($VAR_25)
            foreach ($VAR_25 as $VAR_12)
                DonorStop($VAR_12 ['donor_id'], true);
        if (@$_GET ['noidle'])
            @unlink($locker);
        if (@$_GET ['noidle'] or $test) {
            xlog('No tasks,  demon stopped.');
            exit;
        }
        sleep(15);
        continue;
    }

    extract($VAR_9, EXTR_OVERWRITE);
    query("UPDATE parsemx_tasks SET z_order = " . ($z_order - 1000) . " WHERE task_id = $task_id");

    if ($info)
        $info = loadinfo("task", $info);
    else
        $info = "";

    if ($info2)
        $info2 = loadinfo("task2", $info2);
    else
        $info2 = "";

    if ($info3)
        $info3 = loadinfo("task3", $info3);
    else
        $info3 = "";

    LoadInstruction($ins_id);
    LoadDonorMeters($donor_id);

    $VAR_25 = query("SELECT state FROM parsemx_donors WHERE donor_id = $donor_id")->row;

    if (!$VAR_25 ['state'] and !$test) {
        DonorStop($donor_id);
        continue;
    }

    @$VAR_6 = explode(' ', $VAR_19);
    BeforeEntityProcessing();

    if (strpos($url, "//") !== false) {
        $html = get($url);
    } else {
        $html = "";
        $last_result = 200;
        $site = $donor ['host'];
    }
    
    $VAR_26 = $last_result;
 
    if ($html or(strpos($url, "//") === false)) {
        $VAR_14 = $site . '_' . $entity . '.php';

        if (file_exists($VAR_14)) {
            require_once('scripter.php');
            $skip = false;
            StartCommands($html);
            $VAR_27 = translit($ins ['title']);
            $script = $site . '_' . $VAR_27;
            $image_filename = "$VAR_27/";

            if ($test) {
                echo "<br />";
                xlog("Script <b>$VAR_14</b> start:");
            }

            require($VAR_14);

            if ($test)
                xlog("Script <b>$VAR_14</b> end.");
            if ($VAR_28 = PrepareScript())
                include($VAR_28);

            if (!$skip)
                InsertPlatformEntity($entity);
            EndCommands();
        } else
            xlog('WARNING! No ' . $entity . ' script for ' . $site . ' - ' . $VAR_14);
    }
    
    if (($VAR_26 == 200) or ($VAR_26 == 404) or $test or ($z_order < -10)) {
        query('DELETE FROM parsemx_tasks WHERE task_id = ' . $task_id);
        $donor ['active_tasks'] -= 1;
    } else {
        $z_order--;
        query("UPDATE parsemx_tasks SET z_order = $z_order WHERE task_id = $task_id");
        xlog("NOTICE: Left to retry faulty $url");
    }
    
    if ($VAR_26 == 200) {
        $donor ['done_tasks'] += 1;
    }
    
    SaveDonorMeters();
 
    if (!$donor ['active_tasks'] && !$test)
        DonorStop($donor ['donor_id'], true);
    if ($test) {
        echo "<a name = 'result'></a>";
        if ($VAR_6 = LastInsertedEntityURL()) {
            xlog("NOTICE: Test OK! Result - <a href = '" . $VAR_6 . "'>" . $VAR_6 . "</a>");
            echo "<a name = 'result'></a><iframe width = '1000' height = '600' src = '$VAR_6'></iframe><br/>";
        } else
            xlog("WARNING: No products created!");
        break;
    }
}

xlog('*** ParseMX demon stopped. Working time: ' . (int)(microtime(true) - $VAR_18) . ' secs taken');

@unlink($locker);
if (@$_GET ['auto'])
    echo "<script type = 'text/javascript'> window.onload  =  function () {location = 'go.php?auto = 1';}</script>";